[tool.poetry]
name = "Internet Archive Reference Inventory (IARI)"
version = "4.4.13"
description = "API capable of fetching, extracting, transforming and storing reference information from Wikipedia articles, websites and PDFs as structured data."
authors = [
  "Chris Lombardi <mojomonger@archive.org>",
  "James Hare <jhare@archive.org>",
  "Dennis Priskorn <68460690+dpriskorn@users.noreply.github.com>",
]
license = "GPLv3+"
#readme = "README.md"
#packages = [{include = "src"}]


[tool.poetry.dependencies]
python = ">=3.11,<3.14"
gunicorn = "^23.0.0"
flask = "^3.1.2"
flask-restful = "^0.3.10"
bs4 = "^0.0.2"
marshmallow = "^4.0.1"
fitz = "^0.0.1.dev2"
langdetect = "^1.0.9"
mwparserfromhell = "^0.7.2"
pyalex = "^0.18"
pydantic = "^2.12.3"
requests = "^2.32.5"
rich = "^14.2.0"
tld = "^0.13.1"
wikibaseintegrator = "^0.12.14"
aiohttp = "^3.13.2"
config = "^0.5.1"
pytest = "^8.4.2"
validators = "^0.35.0"


[tool.poetry.group.dev.dependencies]

[tool.ruff]
select = [
  "A",      # flake8-builtins
#  "ASYNC",  # flake8-async
  "ARG",    # flake8-unused-arguments
  "B",      # flake8-bugbear
  "BLE",    # flake8-blind-except
  "C4",     # flake8-comprehensions
  "C90",    # McCabe cyclomatic complexity
  "DTZ",    # flake8-datetimez
  "E",      # pycodestyle
  "EXE",    # flake8-executable
  "F",      # Pyflakes
  "FBT",    # flake8-boolean-trap
  "G",      # flake8-logging-format
  "I",      # isort
  "ICN",    # flake8-import-conventions
  "INP",    # flake8-no-pep420
  "INT",    # flake8-gettext
  "ISC",    # flake8-implicit-str-concat
  "N",      # pep8-naming
  "PGH",    # pygrep-hooks
  "PIE",    # flake8-pie
  "PL",     # Pylint
  "PT",     # flake8-pytest-style
  "PTH",    # flake8-use-pathlib
  "PYI",    # flake8-pyi
  "RSE",    # flake8-raise
  "RUF",    # Ruff-specific rules
  "S",      # flake8-bandit
  "SIM",    # flake8-simplify
  "SLF",    # flake8-self
  "T10",    # flake8-debugger
  "TCH",    # flake8-type-checking
  "TID",    # flake8-tidy-imports
  "UP",     # pyupgrade
  "W",      # pycodestyle
  "YTT",    # flake8-2020
  # "ANN",  # flake8-annotations
  # "COM",  # flake8-commas
  # "D",    # pydocstyle
  # "DJ",   # flake8-django
  # "EM",   # flake8-errmsg
  # "ERA",  # eradicate
  # "NPY",  # NumPy-specific rules
  # "PD",   # pandas-vet
  # "Q",    # flake8-quotes
  # "RET",  # flake8-return
  # "T20",  # flake8-print
  # "TRY",  # tryceratops
]
ignore = [
  "A003",
  "ARG002",
  "DTZ003",
  "EXE002",
  "F401",
  "FBT001",
  "FBT002",
  "G003",
  "G004",
  "INP001",
  "N999",
  "PGH003",
  "PLC1901",
  "PLR2004",
  "PLR5501",
  "PLW2901",
  "PTH110",
  "PTH123",
#  "RUF012", # Error: src/models/api/handlers/all.py:18:35: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
  "RSE102",
  "S113",
  "S324",
  "S501",
  ]
line-length = 160
target-version = "py37"

[tool.ruff.isort]
known-first-party = ["config"]

[tool.ruff.mccabe]
max-complexity = 11

[tool.ruff.per-file-ignores]
"src/models/api/job/article_job.py" = ["SIM103"]
"src/models/wikimedia/wikipedia/reference/generic.py" = ["SIM103"]
"tests/*" = ["PT009", "PT018", "RUF001", "RUF003", "S101"]
#"tests/*" = ["PT027", "PT009", "PT018", "RUF001", "RUF003", "S101"]
# TODO: remove PT027 when those are fixed in test files (search for "TODO: use pytest.raises")

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
